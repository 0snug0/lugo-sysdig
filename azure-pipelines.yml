trigger: none
  # batch: true
# - main

pool:
  vmImage: windows-latest
  # vmImage: ubuntu-latest
  container: ubuntu:18.04


jobs:
- job: SysdigScan
  displayName: Scan container image with Sysdig Secure
  steps:
  - task: Docker@1
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: '$(registryName)'
      dockerFile: '$(Build.ArtifactStagingDirectory)/testing/Dockerfile'
      imageName: '$(RepositoryName)/$(service)$(Build.BuildNumber)'
      qualifyImageName: false
      useDefaultContext: false
      buildContext: '$(Build.ArtifactStagingDirectory)/testing'
      enforceDockerNamingConvention: false
    displayName: 'Build an image'

  - script: |
      mkdir report
      curl -LO "https://download.sysdig.com/scanning/bin/sysdig-cli-scanner/$(curl -L -s https://download.sysdig.com/scanning/sysdig-cli-scanner/latest_version.txt)/linux/amd64/sysdig-cli-scanner"
      chmod +x ./sysdig-cli-scanner
      SECURE_API_TOKEN=$(SDC_SECURE_TOKEN) ./sysdig-cli-scanner --apiurl https://secure.sysdig.com '$(RepositoryName)/$(service)$(Build.BuildNumber)' --policy sysdig-best-practices --output-json=/report/sysdig-report.json
    displayName: "Image scan by Sysdig Secure"
    continueOnError: false

  # - task: Docker@1
  #   inputs:
  #     containerregistrytype: 'Container Registry'
  #     dockerRegistryEndpoint: '$(registryName)'
  #     command: 'Run an image'
  #     imageName: '$(RepositoryName)/$(service)$(Build.BuildNumber)'
  #     containerName: '$(service)'
  #     ports: '$(Port):$(Port)'
  #   displayName: 'Run an image'

  # - task: Docker@1
  #   inputs:
  #     containerregistrytype: 'Container Registry'
  #     dockerRegistryEndpoint: '$(registryName)'
  #     command: 'Push an image'
  #     imageName: '$(RepositoryName)/$(service)$(Build.BuildNumber)'
  #     qualifyImageName: false
  #     enforceDockerNamingConvention: false
  #   displayName: 'Push an image'




